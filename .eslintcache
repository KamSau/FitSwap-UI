[{"/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/serviceWorker.js":"1","/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/components/input/Input.js":"2","/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/pages/user-registry/UserRegistry.js":"3","/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/components/form/Form.js":"4","/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/index.js":"5","/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/pages/login/Login.js":"6","/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/components/header/Header.js":"7","/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/components/button/Button.js":"8","/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/App.js":"9","/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/pages/landing/Landing.js":"10","/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/pages/profile/UserProfile.js":"11"},{"size":5086,"mtime":1606288976326,"results":"12","hashOfConfig":"13"},{"size":508,"mtime":1606290569202,"results":"14","hashOfConfig":"13"},{"size":4903,"mtime":1606603129859,"results":"15","hashOfConfig":"13"},{"size":339,"mtime":1606339473045,"results":"16","hashOfConfig":"13"},{"size":503,"mtime":1606288976326,"results":"17","hashOfConfig":"13"},{"size":1240,"mtime":1606290569202,"results":"18","hashOfConfig":"13"},{"size":447,"mtime":1606290569202,"results":"19","hashOfConfig":"13"},{"size":334,"mtime":1606290569202,"results":"20","hashOfConfig":"13"},{"size":987,"mtime":1606882782542,"results":"21","hashOfConfig":"13"},{"size":747,"mtime":1606334638205,"results":"22","hashOfConfig":"13"},{"size":6367,"mtime":1606882782542,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1j3cdrr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/serviceWorker.js",[],["50","51"],"/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/components/input/Input.js",[],"/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/pages/user-registry/UserRegistry.js",["52","53","54"],"import React, {useState} from \"react\";\nimport Form from \"../../components/form/Form\";\nimport Input from \"../../components/input/Input\";\nimport Button from \"../../components/button/Button\";\nimport Axios from \"axios\";\n\nexport default function UserRegistry({}) {\n  let modifier = \"base\";\n\n  const [name,setName] = useState(\"\");\n  const [lastName,setLastName] = useState(\"\");\n  const [username,setUsername] = useState(\"\");\n  const [middleName,setMiddleName] = useState(\"\");\n  const [email,setEmail] = useState(\"\");\n  const [identification,setIdentification] = useState(\"\");\n  const [password,setPassword] = useState(\"\");\n  const [passwordConf,setPasswordConf] = useState(\"\");\n  const [cellphone,setCellphone] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n\n  let sendRegistry = () => {\n    let pusername = username;\n    let pname = name;\n    let plast_name = lastName;\n    let pmiddle_name = middleName;\n    let pemail = email;\n    let ptelephone = cellphone;\n    let ppassword = password;\n    let ppasswordConf = passwordConf;\n    let pidentification = identification;\n\n    let user = {username: pusername, name: pname, last_name: plast_name, middle_name: pmiddle_name, email: pemail, cellphone: ptelephone, password: ppassword, identification: pidentification, description: \"\"}\n    \n    console.log(user);\n    let valid = false;\n    if(password === passwordConf){\n      valid = validate(user);\n    if(valid){\n      let data = user\n      Axios({\n        method: 'POST',\n        url: \"http://localhost:5000/api/v1/user\",\n        data: data\n      }).then(\n        sendCreds()\n      )\n    }\n    }\n  }\n\n  let sendCreds = () =>{\n    let creds = {password: password, username: username}\n    Axios({\n      method: 'POST',\n      url: \"http://localhost:5000/api/v1/credentials\",\n      data: creds\n    })\n  }\n\n  let validate = (user) => {\n    let valid = false;\n      if(user.username === \"\" || user.password === \"\" || user.email === \"\" || user.name === \"\" || user.last_name === \"\" || user.cellphone === \"\" ){\n        valid = false;\n      }else{\n        valid = true;\n      }\n      return valid;\n  }\n\n  return (\n    <div className={\"login__container--\" + modifier}>\n      <Form modifier=\"base\" label=\"Create Account\" onSubmitF={sendRegistry()}>\n        <Input\n          id=\"username\"\n          name=\"username\"\n          type=\"text\"\n          label=\"Username\"\n          placeholder=\"\"\n          modifier=\"base\"\n          onChangeF={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n        <Input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          label=\"Name\"\n          placeholder=\"\"\n          modifier=\"base\"\n          onChangeF={(e) => {\n            setName(e.target.value);\n          }}\n        />\n        <Input\n          id=\"middle_name\"\n          name=\"middle_name\"\n          type=\"text\"\n          label=\"Middle Name\"\n          placeholder=\"\"\n          modifier=\"base\"\n          onChangeF={(e) => {\n            setMiddleName(e.target.value);\n          }}\n        />\n        <Input\n          id=\"last_name\"\n          name=\"last_name\"\n          type=\"text\"\n          label=\"Last Name\"\n          placeholder=\"\"\n          modifier=\"base\"\n          onChangeF={(e) => {\n            setLastName(e.target.value);\n          }}\n        />\n        <Input\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          label=\"Email\"\n          placeholder=\"\"\n          modifier=\"base\"\n          onChangeF={(e) => {\n            setEmail(e.target.value);\n          }}\n        />\n        <Input\n          id=\"identification\"\n          name=\"identification\"\n          type=\"identification\"\n          label=\"Identification\"\n          placeholder=\"\"\n          modifier=\"base\"\n          onChangeF={(e) => {\n            setIdentification(e.target.value);\n          }}\n        />\n        <Input\n          id=\"cellphone\"\n          name=\"cellphone\"\n          type=\"tel\"\n          label=\"Phone Number\"\n          placeholder=\"\"\n          modifier=\"base\"\n          onChangeF={(e) => {\n            setCellphone(e.target.value);\n          }}\n        />\n        <Input\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          placeholder=\"\"\n          modifier=\"base\"\n          onChangeF={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n        <Input\n          id=\"passwordConfInput\"\n          name=\"passwordConfInput\"\n          type=\"password\"\n          label=\"Password Confirmation\"\n          placeholder=\"\"\n          modifier=\"base\"\n          onChangeF={(e) => {\n            setPasswordConf(e.target.value);\n          }}\n        />\n        <Button\n          text=\"Log in\"\n          type=\"submit\"\n          modifier=\"base\"\n          onSubmitF={(e) => {\n            e.preventDefalt();\n            setSubmitted(true);\n          }}\n        />\n      </Form>\n    </div>\n  );\n}\n","/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/components/form/Form.js",[],"/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/index.js",[],"/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/pages/login/Login.js",["55","56","57","58","59"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Form from \"../../components/form/Form\";\nimport Input from \"../../components/input/Input\";\nimport Button from \"../../components/button/Button\";\nexport default function Login({}) {\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  let modifier = \"base\";\n  return (\n    <div className={\"login__container--\" + modifier}>\n      <Form modifier=\"base\" label=\"Log in\">\n        <Input\n          id=\"usernameInput\"\n          name=\"usernamenput\"\n          type=\"username\"\n          label=\"Username\"\n          placeholder=\"\"\n          modifier=\"base\"\n          onChangeF={() => {\n            console.log(\"typing\");\n          }}\n        />\n        <Input\n          id=\"passwordInput\"\n          name=\"passwordInput\"\n          type=\"password\"\n          label=\"Password\"\n          placeholder=\"\"\n          modifier=\"base\"\n          onChangeF={() => {\n            console.log(\"typing\");\n          }}\n        />\n        <Button\n          text=\"Log in\"\n          type=\"button\"\n          modifier=\"base\"\n          onSubmitF={() => {\n            console.log(\"sending...\");\n          }}\n        />\n      </Form>\n    </div>\n  );\n}\n","/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/components/header/Header.js",[],"/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/components/button/Button.js",[],"/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/App.js",["60","61","62","63","64","65"],"/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/pages/landing/Landing.js",["66"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport logo from \"../../logo.svg\";\n\nexport default function Landing() {\n  const [state, setState] = useState(\"\");\n  useEffect(() => {\n    if (state !== \"connected\") {\n      axios\n        .get(`http://localhost:5000/api/v1/test`)\n        .then((res) => {\n          if (res.data === \"connected\") {\n            setState(res.data);\n          }\n        });\n    }\n  }, []);\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          {state !== \"connected\"\n            ? \"Waiting for connection\"\n            : \"Connection established!\"}\n        </p>\n      </div>\n    </div>\n  );\n}\n","/home/esteban/Desktop/fitswap-ui/FitSwap-UI/src/pages/profile/UserProfile.js",["67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":7,"column":38,"nodeType":"75","messageId":"76","endLine":7,"endColumn":40},{"ruleId":"77","severity":1,"message":"78","line":19,"column":10,"nodeType":"79","messageId":"80","endLine":19,"endColumn":19},{"ruleId":"77","severity":1,"message":"81","line":29,"column":9,"nodeType":"79","messageId":"80","endLine":29,"endColumn":22},{"ruleId":"77","severity":1,"message":"82","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"83","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":6,"column":31,"nodeType":"75","messageId":"76","endLine":6,"endColumn":33},{"ruleId":"77","severity":1,"message":"84","line":7,"column":10,"nodeType":"79","messageId":"80","endLine":7,"endColumn":21},{"ruleId":"77","severity":1,"message":"85","line":7,"column":23,"nodeType":"79","messageId":"80","endLine":7,"endColumn":37},{"ruleId":"77","severity":1,"message":"82","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"86","line":1,"column":28,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"87","line":2,"column":35,"nodeType":"79","messageId":"80","endLine":2,"endColumn":39},{"ruleId":"77","severity":1,"message":"88","line":2,"column":41,"nodeType":"79","messageId":"80","endLine":2,"endColumn":47},{"ruleId":"77","severity":1,"message":"83","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":13},{"ruleId":"77","severity":1,"message":"89","line":13,"column":9,"nodeType":"79","messageId":"80","endLine":13,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":17,"column":6,"nodeType":"92","endLine":17,"endColumn":8,"suggestions":"93"},{"ruleId":"73","severity":1,"message":"74","line":4,"column":37,"nodeType":"75","messageId":"76","endLine":4,"endColumn":39},{"ruleId":"77","severity":1,"message":"94","line":10,"column":8,"nodeType":"79","messageId":"80","endLine":10,"endColumn":11},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'submitted' is assigned a value but never used.","Identifier","unusedVar","'ppasswordConf' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'credentials' is assigned a value but never used.","'setCredentials' is assigned a value but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'loggedUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["97"],"'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [state]",{"range":"100","text":"101"},[442,444],"[state]"]