[{"C:\\Users\\kamil\\Desktop\\Universidad\\Componentes\\Proyecto\\FitSwap-UI\\src\\index.js":"1","C:\\Users\\kamil\\Desktop\\Universidad\\Componentes\\Proyecto\\FitSwap-UI\\src\\pages\\user-registry\\UserRegistry.js":"2","C:\\Users\\kamil\\Desktop\\Universidad\\Componentes\\Proyecto\\FitSwap-UI\\src\\pages\\post-registry\\PostRegistry.js":"3","C:\\Users\\kamil\\Desktop\\Universidad\\Componentes\\Proyecto\\FitSwap-UI\\src\\pages\\login\\Login.js":"4","C:\\Users\\kamil\\Desktop\\Universidad\\Componentes\\Proyecto\\FitSwap-UI\\src\\pages\\profile-edit\\ProfileEdit.js":"5","C:\\Users\\kamil\\Desktop\\Universidad\\Componentes\\Proyecto\\FitSwap-UI\\src\\pages\\landing\\Landing.js":"6"},{"size":520,"mtime":1605114530221,"results":"7","hashOfConfig":"8"},{"size":5618,"mtime":1607787982143,"results":"9","hashOfConfig":"8"},{"size":3514,"mtime":1607787982141,"results":"10","hashOfConfig":"8"},{"size":2591,"mtime":1607790980364,"results":"11","hashOfConfig":"8"},{"size":5894,"mtime":1607790982131,"results":"12","hashOfConfig":"8"},{"size":1342,"mtime":1607790980364,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"13cm2ye",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\kamil\\Desktop\\Universidad\\Componentes\\Proyecto\\FitSwap-UI\\src\\index.js",[],["29","30"],"C:\\Users\\kamil\\Desktop\\Universidad\\Componentes\\Proyecto\\FitSwap-UI\\src\\pages\\user-registry\\UserRegistry.js",["31","32","33"],"C:\\Users\\kamil\\Desktop\\Universidad\\Componentes\\Proyecto\\FitSwap-UI\\src\\pages\\post-registry\\PostRegistry.js",["34","35","36","37","38","39","40"],"C:\\Users\\kamil\\Desktop\\Universidad\\Componentes\\Proyecto\\FitSwap-UI\\src\\pages\\login\\Login.js",["41","42","43","44"],"C:\\Users\\kamil\\Desktop\\Universidad\\Componentes\\Proyecto\\FitSwap-UI\\src\\pages\\profile-edit\\ProfileEdit.js",["45","46","47","48","49","50"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Form from \"../../components/form/Form\";\r\nimport Input from \"../../components/input/Input\";\r\nimport Button from \"../../components/button/Button\";\r\nimport axios from \"axios\";\r\nimport CloudinaryWidget from \"../../components/cloudinary-widget/CloudinaryWidget\";\r\nimport { SessionContext } from \"../../helpers/SessionContext\";\r\n\r\nexport default function UserUpdate({ history }) {\r\n  let modifier = \"base\";\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    name: \"\",\r\n    lastName: \"\",\r\n    middle_name: \"\",\r\n    email: \"\",\r\n    cellphone: \"\",\r\n    password: \"\",\r\n    identification: \"\",\r\n    description: \"\",\r\n    img_url: \"\",\r\n  });\r\n  const [url, setUrl] = useState(\"\");\r\n  const [fetched, setFetched] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [middleName, setMiddleName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [identification, setIdentification] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [cellphone, setCellphone] = useState(\"\");\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const { session, setSession } = useContext(SessionContext);\r\n\r\n  /*\r\n  window.onload = function (){\r\n    \r\n  }*/\r\n\r\n  useEffect(() => {\r\n    if (fetched !== \"connected\") {\r\n      axios\r\n        .get(`http://fitswapbackend-env.eba-zdurp42b.us-east-2.elasticbeanstalk.com/api/v1/user`, {\r\n          headers: { Authorization: \"Bearer \" + session },\r\n        })\r\n        .then((res) => {\r\n          setState(res.data);\r\n          setFetched(\"connected\");\r\n          console.log(fetched);\r\n        });\r\n    }\r\n  }, [fetched]);\r\n  useEffect(() => {\r\n    console.log(\"PRESSED\", submitted);\r\n    if (submitted == 1) {\r\n      sendUpdate();\r\n    }\r\n  }, [submitted]);\r\n\r\n  let sendUpdate = () => {\r\n    let pusername = username;\r\n    let pname = name;\r\n    let plast_name = lastName;\r\n    let pmiddle_name = middleName;\r\n    let pemail = email;\r\n    let ptelephone = cellphone;\r\n    let ppassword = password;\r\n    let pidentification = identification;\r\n    let purl = url;\r\n\r\n    let user = {\r\n      username: pusername,\r\n      name: pname,\r\n      lastName: plast_name,\r\n      middle_name: pmiddle_name,\r\n      email: pemail,\r\n      cellphone: ptelephone,\r\n      password: ppassword,\r\n      identification: pidentification,\r\n      description: \"\",\r\n      url: purl,\r\n    };\r\n\r\n    console.log(user);\r\n    let valid = false;\r\n    valid = validate(user);\r\n    if (valid) {\r\n      let data = user;\r\n      axios.put(\"http://fitswapbackend-env.eba-zdurp42b.us-east-2.elasticbeanstalk.com/api/v1/user\", data).then(() => {\r\n        setSubmitted(0);\r\n        history.push(\"/profile/jpozuelo\");\r\n      });\r\n    } else {\r\n      setSubmitted(0);\r\n    }\r\n  };\r\n\r\n  let validate = (user) => {\r\n    let valid = false;\r\n    if (\r\n      user.username === \"\" ||\r\n      user.password === \"\" ||\r\n      user.email === \"\" ||\r\n      user.name === \"\" ||\r\n      user.last_name === \"\" ||\r\n      user.cellphone === \"\" ||\r\n      user.url === \"\" ||\r\n      submitted == 0\r\n    ) {\r\n      valid = false;\r\n      setSubmitted(0);\r\n    } else {\r\n      valid = true;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  return (\r\n    <div className={\"login__container--\" + modifier}>\r\n      <Form\r\n        modifier=\"base\"\r\n        label=\"Update Account\"\r\n        onSubmitF={(e) => {\r\n          e.preventDefault();\r\n          setSubmitted(1);\r\n        }}\r\n      >\r\n        <CloudinaryWidget setUrl={setUrl}></CloudinaryWidget>\r\n        <Input\r\n          id=\"username\"\r\n          name=\"username\"\r\n          type=\"text\"\r\n          label=\"Username\"\r\n          placeholder={state.username}\r\n          modifier=\"base\"\r\n          onChangeF={(e) => {\r\n            setUsername(e.target.value);\r\n          }}\r\n        />\r\n        <Input\r\n          id=\"name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          label=\"Name\"\r\n          placeholder={state.name}\r\n          modifier=\"base\"\r\n          onChangeF={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n        />\r\n        <Input\r\n          id=\"middle_name\"\r\n          name=\"middle_name\"\r\n          type=\"text\"\r\n          label=\"Middle Name\"\r\n          placeholder={state.middle_name}\r\n          modifier=\"base\"\r\n          onChangeF={(e) => {\r\n            setMiddleName(e.target.value);\r\n          }}\r\n        />\r\n        <Input\r\n          id=\"last_name\"\r\n          name=\"last_name\"\r\n          type=\"text\"\r\n          label=\"Last Name\"\r\n          placeholder={state.lastName}\r\n          modifier=\"base\"\r\n          onChangeF={(e) => {\r\n            setLastName(e.target.value);\r\n          }}\r\n        />\r\n        <Input\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          label=\"Email\"\r\n          placeholder={state.email}\r\n          modifier=\"base\"\r\n          onChangeF={(e) => {\r\n            setEmail(e.target.value);\r\n          }}\r\n        />\r\n        <Input\r\n          id=\"identification\"\r\n          name=\"identification\"\r\n          type=\"identification\"\r\n          label=\"Identification\"\r\n          placeholder={state.identification}\r\n          modifier=\"base\"\r\n          onChangeF={(e) => {\r\n            setIdentification(e.target.value);\r\n          }}\r\n        />\r\n        <Input\r\n          id=\"cellphone\"\r\n          name=\"cellphone\"\r\n          type=\"tel\"\r\n          label=\"Phone Number\"\r\n          placeholder={state.cellphone}\r\n          modifier=\"base\"\r\n          onChangeF={(e) => {\r\n            setCellphone(e.target.value);\r\n          }}\r\n        />\r\n        <Button\r\n          text=\"Save\"\r\n          type=\"submit\"\r\n          modifier=\"base\"\r\n          onSubmitF={(e) => {\r\n            e.preventDefault();\r\n            setSubmitted(1);\r\n          }}\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\kamil\\Desktop\\Universidad\\Componentes\\Proyecto\\FitSwap-UI\\src\\pages\\landing\\Landing.js",["51","52","53"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport logo from \"../../logo.svg\";\r\nimport { SessionContext } from \"../../helpers/SessionContext\";\r\nimport Button from \"../../components/button/Button\";\r\n\r\nexport default function Landing() {\r\n  const [state, setState] = useState(\"\");\r\n  const { session, setSession } = useContext(SessionContext);\r\n  useEffect(() => {\r\n    if (state !== \"connected\") {\r\n      axios.get(`http://fitswapbackend-env.eba-zdurp42b.us-east-2.elasticbeanstalk.com/api/v1/test`).then((res) => {\r\n        if (res.data === \"connected\") {\r\n          setState(res.data);\r\n        }\r\n      });\r\n    } else {\r\n      if (session !== \"\") {\r\n        axios\r\n          .get(`http://fitswapbackend-env.eba-zdurp42b.us-east-2.elasticbeanstalk.com/api/v1/session`, {\r\n            headers: { Authorization: \"Bearer \" + session },\r\n          })\r\n          .then((res) => {\r\n            console.log(res.data);\r\n          });\r\n      }\r\n    }\r\n  }, [session]);\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          {state !== \"connected\"\r\n            ? \"Waiting for connection\"\r\n            : \"Connection established!\"}\r\n        </p>\r\n        <p></p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":22,"column":19,"nodeType":"60","messageId":"61","endLine":22,"endColumn":21},{"ruleId":"62","severity":1,"message":"63","line":32,"column":6,"nodeType":"64","endLine":32,"endColumn":17,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":42,"column":9,"nodeType":"68","messageId":"69","endLine":42,"endColumn":22},{"ruleId":"66","severity":1,"message":"70","line":29,"column":10,"nodeType":"68","messageId":"69","endLine":29,"endColumn":19},{"ruleId":"66","severity":1,"message":"71","line":29,"column":21,"nodeType":"68","messageId":"69","endLine":29,"endColumn":33},{"ruleId":"66","severity":1,"message":"72","line":32,"column":20,"nodeType":"68","messageId":"69","endLine":32,"endColumn":30},{"ruleId":"62","severity":1,"message":"73","line":46,"column":6,"nodeType":"64","endLine":46,"endColumn":15,"suggestions":"74"},{"ruleId":"58","severity":1,"message":"59","line":49,"column":17,"nodeType":"60","messageId":"61","endLine":49,"endColumn":19},{"ruleId":"62","severity":1,"message":"75","line":76,"column":6,"nodeType":"64","endLine":76,"endColumn":22,"suggestions":"76"},{"ruleId":"58","severity":1,"message":"59","line":84,"column":15,"nodeType":"60","messageId":"61","endLine":84,"endColumn":17},{"ruleId":"66","severity":1,"message":"77","line":12,"column":11,"nodeType":"68","messageId":"69","endLine":12,"endColumn":18},{"ruleId":"58","severity":1,"message":"59","line":15,"column":19,"nodeType":"60","messageId":"61","endLine":15,"endColumn":21},{"ruleId":"62","severity":1,"message":"78","line":36,"column":6,"nodeType":"64","endLine":36,"endColumn":17,"suggestions":"79"},{"ruleId":"58","severity":1,"message":"59","line":40,"column":67,"nodeType":"60","messageId":"61","endLine":40,"endColumn":69},{"ruleId":"66","severity":1,"message":"80","line":31,"column":20,"nodeType":"68","messageId":"69","endLine":31,"endColumn":31},{"ruleId":"66","severity":1,"message":"72","line":34,"column":20,"nodeType":"68","messageId":"69","endLine":34,"endColumn":30},{"ruleId":"62","severity":1,"message":"73","line":53,"column":6,"nodeType":"64","endLine":53,"endColumn":15,"suggestions":"81"},{"ruleId":"58","severity":1,"message":"59","line":56,"column":19,"nodeType":"60","messageId":"61","endLine":56,"endColumn":21},{"ruleId":"62","severity":1,"message":"82","line":59,"column":6,"nodeType":"64","endLine":59,"endColumn":17,"suggestions":"83"},{"ruleId":"58","severity":1,"message":"59","line":109,"column":17,"nodeType":"60","messageId":"61","endLine":109,"endColumn":19},{"ruleId":"66","severity":1,"message":"84","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":14},{"ruleId":"66","severity":1,"message":"72","line":9,"column":20,"nodeType":"68","messageId":"69","endLine":9,"endColumn":30},{"ruleId":"62","severity":1,"message":"85","line":28,"column":6,"nodeType":"64","endLine":28,"endColumn":15,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sendRegistry'. Either include it or remove the dependency array.","ArrayExpression",["89"],"no-unused-vars","'ppasswordConf' is assigned a value but never used.","Identifier","unusedVar","'submitted' is assigned a value but never used.","'setSubmitted' is assigned a value but never used.","'setSession' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'session'. Either include it or remove the dependency array.",["90"],"React Hook useEffect has missing dependencies: 'description', 'history', 'session', 'title', 'url', and 'validate'. Either include them or remove the dependency array.",["91"],"'session' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'password', 'setSession', 'username', and 'validate'. Either include them or remove the dependency array.",["92"],"'setPassword' is assigned a value but never used.",["93"],"React Hook useEffect has a missing dependency: 'sendUpdate'. Either include it or remove the dependency array.",["94"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"98","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [sendRegistry, submitted]",{"range":"109","text":"110"},"Update the dependencies array to be: [fetched, session]",{"range":"111","text":"112"},"Update the dependencies array to be: [description, history, pressed, session, state, title, url, validate]",{"range":"113","text":"114"},"Update the dependencies array to be: [history, password, setSession, submitted, username, validate]",{"range":"115","text":"116"},{"range":"117","text":"112"},"Update the dependencies array to be: [sendUpdate, submitted]",{"range":"118","text":"119"},"Update the dependencies array to be: [session, state]",{"range":"120","text":"121"},[1198,1209],"[sendRegistry, submitted]",[1427,1436],"[fetched, session]",[2223,2239],"[description, history, pressed, session, state, title, url, validate]",[1249,1260],"[history, password, setSession, submitted, username, validate]",[1764,1773],[1898,1909],"[sendUpdate, submitted]",[999,1008],"[session, state]"]